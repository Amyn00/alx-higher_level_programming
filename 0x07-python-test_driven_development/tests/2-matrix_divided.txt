# Test cases for matrix_divided function
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test case 1: Valid input
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test case 2: Non-numeric element in the matrix (TypeError)
>>> matrix = [
...     [1, 2, 3],
...     [4, 'five', 6]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case 3: Rows of different sizes in the matrix (TypeError)
>>> matrix = [
...     [1, 2, 3],
...     [4, 5],
... ]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

# Test case 4: Non-numeric div (TypeError)
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, "two"))
Traceback (most recent call last):
TypeError: div must be a number

# Test case 5: Division by zero (ZeroDivisionError)
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero


